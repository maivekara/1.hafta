name: Finans Payment Pipeline

on:
  push:
    branches: [main]
  workflow_dispatch: # Manuel çalıştırmaya izin verir

env:
  IMAGE_NAME: ozturk25/payment-service # Docker Hub kullanıcı adınız/imaj adınız
  AWS_REGION: eu-central-1

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    permissions: # Gerekli izinler
      contents: read
      packages: write # Docker Hub'a push yapmak için
      security-events: write # Trivy SARIF raporunu yüklemek için

    steps:
      - name: Kodu Çıkart
        uses: actions/checkout@v4

      - name: Docker Buildx Kurulumu
        uses: docker/setup-buildx-action@v3 # v2 yerine v3 kullanmak daha iyi

      - name: Docker İmajını Oluştur ve Yükle
        uses: docker/build-push-action@v5 # Bu aksiyonu kullanıyoruz
        with:
          context: . # Dockerfile'ın bulunduğu dizin
          push: false # Şimdilik Docker Hub'a göndermiyoruz, sadece yerel olarak yüklüyoruz
          tags: ${{ env.IMAGE_NAME }}:${{ github.sha }},${{ env.IMAGE_NAME }}:latest
          load: true # <-- Burası çok önemli! İmajı çalıştırıcının Docker daemon'ına yükler

      - name: Testleri Çalıştır
        run: |
          # 'tests' dizininin varlığını kontrol et
          if [ -d "tests" ]; then
            echo "Tests dizini bulundu. Testler çalıştırılıyor..."
            # Testleri Docker konteyneri içinde çalıştır
            # pytest komutunun bulunduğu bir entrypoint veya komut kullanın
            docker run --rm ${{ env.IMAGE_NAME }}:${{ github.sha }} python -m pytest tests/
          else
            echo "Tests dizini bulunamadı, testler atlanıyor."
            exit 0 # Test dizini yoksa adımı başarılı olarak tamamla
          fi

      - name: Trivy Güvenlik Taraması
        uses: aquasecurity/trivy-action@0.14.0
        with:
          # İmaj referansını doğrudan ortam değişkenlerinden alıyoruz
          image-ref: ${{ env.IMAGE_NAME }}:${{ github.sha }} # <-- Burası artık doğru çalışmalı
          format: 'sarif'
          severity: 'CRITICAL,HIGH'
          output: 'trivy-results.sarif'
          # Diğer Trivy ayarları (isteğe bağlı):
          # vuln-type: 'os,library' # Varsayılan olarak os,library'dir
          # ignore-unfixed: true # Düzeltmesi olmayan zafiyetleri göz ardı eder
          # exit-code: '1' # Zafiyet bulunursa aksiyonu başarısız yapar

      - name: Trivy Sonuçlarını Yükle (SARIF)
        uses: github/codeql-action/upload-sarif@v3 # v2 yerine v3 kullanmak daha iyi
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Docker Hub'a Giriş Yap
        uses: docker/login-action@v3 # v2 yerine v3 kullanmak daha iyi
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Hub'a Gönder
        run: |
          docker push ${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.IMAGE_NAME }}:latest

      - name: ECS'ye Dağıt
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: task-definition.json
          service: payment-service
          cluster: payment-cluster
          wait-for-service-stability: true

      - name: Slack Bildirimi
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "Deploy başarılı: ${{ env.IMAGE_NAME }}:${{ github.sha }}",
              "blocks": [{
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "✅ *Deploy Tamamlandı* \n*Image:* `${{ env.IMAGE_NAME }}:${{ github.sha }}`"
                }
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
